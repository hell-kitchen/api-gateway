// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package model

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel(in *jlexer.Lexer, out *UsersUnsubscribeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel(out *jwriter.Writer, in UsersUnsubscribeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersUnsubscribeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersUnsubscribeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersUnsubscribeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersUnsubscribeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel1(in *jlexer.Lexer, out *UsersSubscribeRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel1(out *jwriter.Writer, in UsersSubscribeRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersSubscribeRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersSubscribeRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersSubscribeRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersSubscribeRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel1(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel2(in *jlexer.Lexer, out *UsersSetPasswordRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "new_password":
			out.NewPassword = string(in.String())
		case "current_password":
			out.CurrentPassword = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel2(out *jwriter.Writer, in UsersSetPasswordRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"new_password\":"
		out.RawString(prefix[1:])
		out.String(string(in.NewPassword))
	}
	{
		const prefix string = ",\"current_password\":"
		out.RawString(prefix)
		out.String(string(in.CurrentPassword))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersSetPasswordRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersSetPasswordRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersSetPasswordRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersSetPasswordRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel2(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel3(in *jlexer.Lexer, out *UsersGetSubscriptionsRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel3(out *jwriter.Writer, in UsersGetSubscriptionsRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersGetSubscriptionsRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersGetSubscriptionsRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersGetSubscriptionsRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersGetSubscriptionsRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel3(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel4(in *jlexer.Lexer, out *UsersGetByIDRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel4(out *jwriter.Writer, in UsersGetByIDRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersGetByIDRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersGetByIDRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersGetByIDRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersGetByIDRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel4(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel5(in *jlexer.Lexer, out *UsersGetAllRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel5(out *jwriter.Writer, in UsersGetAllRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersGetAllRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel5(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersGetAllRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel5(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersGetAllRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel5(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersGetAllRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel5(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel6(in *jlexer.Lexer, out *UsersCreateRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "email":
			out.Email = string(in.String())
		case "username":
			out.Username = string(in.String())
		case "first_name":
			out.FirstName = string(in.String())
		case "last_name":
			out.LastName = string(in.String())
		case "password":
			out.Password = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel6(out *jwriter.Writer, in UsersCreateRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix[1:])
		out.String(string(in.Email))
	}
	{
		const prefix string = ",\"username\":"
		out.RawString(prefix)
		out.String(string(in.Username))
	}
	{
		const prefix string = ",\"first_name\":"
		out.RawString(prefix)
		out.String(string(in.FirstName))
	}
	{
		const prefix string = ",\"last_name\":"
		out.RawString(prefix)
		out.String(string(in.LastName))
	}
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix)
		out.String(string(in.Password))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v UsersCreateRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel6(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v UsersCreateRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel6(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *UsersCreateRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel6(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *UsersCreateRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel6(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel7(in *jlexer.Lexer, out *TokensLoginRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "password":
			out.Password = string(in.String())
		case "email":
			out.Email = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel7(out *jwriter.Writer, in TokensLoginRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"password\":"
		out.RawString(prefix[1:])
		out.String(string(in.Password))
	}
	{
		const prefix string = ",\"email\":"
		out.RawString(prefix)
		out.String(string(in.Email))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TokensLoginRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel7(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TokensLoginRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel7(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TokensLoginRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel7(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TokensLoginRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel7(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel8(in *jlexer.Lexer, out *TagsGetByIDRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel8(out *jwriter.Writer, in TagsGetByIDRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v TagsGetByIDRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel8(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v TagsGetByIDRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel8(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *TagsGetByIDRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel8(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *TagsGetByIDRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel8(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel9(in *jlexer.Lexer, out *RecipesUpdateByIDRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ingredients":
			if in.IsNull() {
				in.Skip()
				out.Ingredients = nil
			} else {
				in.Delim('[')
				if out.Ingredients == nil {
					if !in.IsDelim(']') {
						out.Ingredients = make([]IngredientInRecipeCreationDTO, 0, 2)
					} else {
						out.Ingredients = []IngredientInRecipeCreationDTO{}
					}
				} else {
					out.Ingredients = (out.Ingredients)[:0]
				}
				for !in.IsDelim(']') {
					var v1 IngredientInRecipeCreationDTO
					(v1).UnmarshalEasyJSON(in)
					out.Ingredients = append(out.Ingredients, v1)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "tags":
			if in.IsNull() {
				in.Skip()
				out.Tags = nil
			} else {
				in.Delim('[')
				if out.Tags == nil {
					if !in.IsDelim(']') {
						out.Tags = make([]string, 0, 4)
					} else {
						out.Tags = []string{}
					}
				} else {
					out.Tags = (out.Tags)[:0]
				}
				for !in.IsDelim(']') {
					var v2 string
					v2 = string(in.String())
					out.Tags = append(out.Tags, v2)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "image":
			out.Image = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "cooking_time":
			out.CookingTime = int32(in.Int32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel9(out *jwriter.Writer, in RecipesUpdateByIDRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ingredients\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		if in.Ingredients == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v3, v4 := range in.Ingredients {
				if v3 > 0 {
					out.RawByte(',')
				}
				(v4).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"tags\":"
		out.RawString(prefix)
		if in.Tags == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v5, v6 := range in.Tags {
				if v5 > 0 {
					out.RawByte(',')
				}
				out.String(string(v6))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.String(string(in.Image))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"cooking_time\":"
		out.RawString(prefix)
		out.Int32(int32(in.CookingTime))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesUpdateByIDRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel9(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesUpdateByIDRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel9(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesUpdateByIDRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel9(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesUpdateByIDRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel9(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel10(in *jlexer.Lexer, out *RecipesRemoveRecipeFromShoppingCartRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel10(out *jwriter.Writer, in RecipesRemoveRecipeFromShoppingCartRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesRemoveRecipeFromShoppingCartRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel10(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesRemoveRecipeFromShoppingCartRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel10(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesRemoveRecipeFromShoppingCartRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel10(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesRemoveRecipeFromShoppingCartRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel10(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel11(in *jlexer.Lexer, out *RecipesRemoveRecipeFromFavoriteRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel11(out *jwriter.Writer, in RecipesRemoveRecipeFromFavoriteRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesRemoveRecipeFromFavoriteRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel11(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesRemoveRecipeFromFavoriteRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel11(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesRemoveRecipeFromFavoriteRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel11(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesRemoveRecipeFromFavoriteRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel11(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel12(in *jlexer.Lexer, out *RecipesGetByIDRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel12(out *jwriter.Writer, in RecipesGetByIDRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesGetByIDRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel12(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesGetByIDRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel12(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesGetByIDRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel12(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesGetByIDRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel12(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel13(in *jlexer.Lexer, out *RecipesGetAllRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel13(out *jwriter.Writer, in RecipesGetAllRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesGetAllRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel13(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesGetAllRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel13(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesGetAllRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel13(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesGetAllRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel13(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel14(in *jlexer.Lexer, out *RecipesDeleteByIDRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel14(out *jwriter.Writer, in RecipesDeleteByIDRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesDeleteByIDRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel14(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesDeleteByIDRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel14(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesDeleteByIDRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel14(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesDeleteByIDRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel14(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel15(in *jlexer.Lexer, out *RecipesCreateRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "ingredients":
			if in.IsNull() {
				in.Skip()
				out.Ingredients = nil
			} else {
				in.Delim('[')
				if out.Ingredients == nil {
					if !in.IsDelim(']') {
						out.Ingredients = make([]IngredientInRecipeCreationDTO, 0, 2)
					} else {
						out.Ingredients = []IngredientInRecipeCreationDTO{}
					}
				} else {
					out.Ingredients = (out.Ingredients)[:0]
				}
				for !in.IsDelim(']') {
					var v7 IngredientInRecipeCreationDTO
					(v7).UnmarshalEasyJSON(in)
					out.Ingredients = append(out.Ingredients, v7)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "tags":
			if in.IsNull() {
				in.Skip()
				out.Tags = nil
			} else {
				in.Delim('[')
				if out.Tags == nil {
					if !in.IsDelim(']') {
						out.Tags = make([]string, 0, 4)
					} else {
						out.Tags = []string{}
					}
				} else {
					out.Tags = (out.Tags)[:0]
				}
				for !in.IsDelim(']') {
					var v8 string
					v8 = string(in.String())
					out.Tags = append(out.Tags, v8)
					in.WantComma()
				}
				in.Delim(']')
			}
		case "image":
			out.Image = string(in.String())
		case "name":
			out.Name = string(in.String())
		case "text":
			out.Text = string(in.String())
		case "cooking_time":
			out.CookingTime = uint32(in.Uint32())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel15(out *jwriter.Writer, in RecipesCreateRequest) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"ingredients\":"
		out.RawString(prefix[1:])
		if in.Ingredients == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v9, v10 := range in.Ingredients {
				if v9 > 0 {
					out.RawByte(',')
				}
				(v10).MarshalEasyJSON(out)
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"tags\":"
		out.RawString(prefix)
		if in.Tags == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
			out.RawString("null")
		} else {
			out.RawByte('[')
			for v11, v12 := range in.Tags {
				if v11 > 0 {
					out.RawByte(',')
				}
				out.String(string(v12))
			}
			out.RawByte(']')
		}
	}
	{
		const prefix string = ",\"image\":"
		out.RawString(prefix)
		out.String(string(in.Image))
	}
	{
		const prefix string = ",\"name\":"
		out.RawString(prefix)
		out.String(string(in.Name))
	}
	{
		const prefix string = ",\"text\":"
		out.RawString(prefix)
		out.String(string(in.Text))
	}
	{
		const prefix string = ",\"cooking_time\":"
		out.RawString(prefix)
		out.Uint32(uint32(in.CookingTime))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesCreateRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel15(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesCreateRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel15(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesCreateRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel15(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesCreateRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel15(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel16(in *jlexer.Lexer, out *RecipesAddRecipeToShoppingCartRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel16(out *jwriter.Writer, in RecipesAddRecipeToShoppingCartRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesAddRecipeToShoppingCartRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel16(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesAddRecipeToShoppingCartRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel16(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesAddRecipeToShoppingCartRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel16(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesAddRecipeToShoppingCartRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel16(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel17(in *jlexer.Lexer, out *RecipesAddRecipeToFavoriteRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel17(out *jwriter.Writer, in RecipesAddRecipeToFavoriteRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RecipesAddRecipeToFavoriteRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel17(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RecipesAddRecipeToFavoriteRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel17(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RecipesAddRecipeToFavoriteRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel17(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RecipesAddRecipeToFavoriteRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel17(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel18(in *jlexer.Lexer, out *IngredientsGetByIDRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel18(out *jwriter.Writer, in IngredientsGetByIDRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v IngredientsGetByIDRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel18(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v IngredientsGetByIDRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel18(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *IngredientsGetByIDRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel18(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *IngredientsGetByIDRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel18(l, v)
}
func easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel19(in *jlexer.Lexer, out *IngredientsGetAllRequest) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel19(out *jwriter.Writer, in IngredientsGetAllRequest) {
	out.RawByte('{')
	first := true
	_ = first
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v IngredientsGetAllRequest) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel19(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v IngredientsGetAllRequest) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson11d1a9baEncodeGithubComHellKitchenApiGatewayPkgModel19(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *IngredientsGetAllRequest) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel19(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *IngredientsGetAllRequest) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson11d1a9baDecodeGithubComHellKitchenApiGatewayPkgModel19(l, v)
}
